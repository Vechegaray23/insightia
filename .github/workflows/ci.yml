name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  python:
    name: 🐍 Test Python
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: ⚙️ Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest pre-commit

      - name: Run pre-commit hooks
        run: pre-commit run --all-files --show-diff-on-failure

      - name: Run tests
        run: pytest

  terraform:
    name: 🌍 Terraform
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: iac
    env:
      cloudflare_account_id:     ${{ secrets.cloudflare_account_id }}
      railway_token: ${{ secrets.railway_token }}
      supabase_organization_id: ${{ secrets.supabase_organization_id }}
      supabase_access_token: ${{ secrets.supabase_access_token }}
      cloudflare_api_token: ${{ secrets.cloudflare_api_token }}
      supabase_db_password: ${{ secrets.supabase_db_password }}


    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: ⚙️ Setup Terraform CLI
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: '1.8.0'

      - name: Terraform Format
        run: terraform fmt -check -recursive

      - name: 🔐 Azure Login
        if: env.AZURE_CLIENT_ID && env.AZURE_CLIENT_SECRET && env.AZURE_TENANT_ID
        uses: azure/login@v1
        with:
          client-id:     ${{ env.AZURE_CLIENT_ID }}
          client-secret: ${{ env.AZURE_CLIENT_SECRET }}
          tenant-id:     ${{ env.AZURE_TENANT_ID }}

      - name: ⚙️ Set up GCP Credentials
        if: env.GOOGLE_CREDENTIALS != ''
        run: |
          echo "${{ env.GOOGLE_CREDENTIALS }}" > $HOME/gcp-key.json
          gcloud auth activate-service-account --key-file=$HOME/gcp-key.json

      - name: 🔐 Terraform Cloud Login
        if: env.TF_API_TOKEN != ''
        run: terraform login

      - name: 📂 Terraform Init
        run: |
          terraform init \
            -input=false \
            $( [[ -n "${{ env.TF_API_TOKEN }}" ]] && echo "-backend-config=\"token=${{ env.TF_API_TOKEN }}\"" )

      - name: ✅ Terraform Validate
        run: terraform validate

      - name: 🔍 Terraform Plan
        run: terraform plan \
             -input=false \
             -out=tfplan

      - name: 📄 Upload tfplan artifact
        uses: actions/upload-artifact@v3
        with:
          name: tfplan
          path: tfplan
